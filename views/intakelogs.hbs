<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/intakelogs.css">
    <title>IntakeLogs</title>
    <style>
        .action-buttons {
            margin-top: 10px;
        }

        .action-buttons button {
            display: inline-block;
            margin-right: 10px;
            padding: 5px 10px;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        .action-buttons button.edit-btn {
            background-color: #28a745;
        }

        .action-buttons button.delete-btn {
            background-color: #dc3545;
        }

        .action-buttons button:hover {
            opacity: 0.8;
        }

        .edit-form {
            display: none;
            margin-top: 10px;
        }

        .edit-form input {
            margin-right: 10px;
            padding: 5px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }

        .edit-form button {
            padding: 5px 10px;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        .summary {
            margin-top: 20px;
            padding: 20px;
            background-color: #f8f9fa;
            border-radius: 10px;
            margin-bottom: 20px;
            border: 1px solid #dee2e6;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        .summary h2 {
            margin-bottom: 15px;
            font-size: 24px;
            color: #343a40;
        }

        .summary strong {
            display: inline-block;
            width: 150px;
        }
    </style>
</head>

<body>

    
    <div class="summary">
        <h2>SUMMARY</h2>
        <strong>Calories:</strong> {{sum_log.total_calories}} kcal<br>
        <strong>Protein:</strong> {{sum_log.total_protein}} g<br>
        <strong>Fat:</strong> {{sum_log.total_fat}} g<br>
        <strong>Carbohydrate:</strong> {{sum_log.total_carbohydrate}} g<br>
    </div>

    <ul>
        {{#each logs}}
        <li>
            <strong>Food:</strong> {{this.FoodInfo.food_name}}<br>
            <strong>Amount:</strong> {{this.amount}} grams<br>
            <strong>Date:</strong> {{this.date}}<br>
            <strong>Calories:</strong> {{this.FoodInfo.calories}} kcal<br>
            <strong>Protein:</strong> {{this.FoodInfo.protein}} g<br>
            <strong>Fat:</strong> {{this.FoodInfo.fat}} g<br>
            <strong>Carbohydrate:</strong> {{this.FoodInfo.carbohydrate}} g<br>

           
            <div class="action-buttons">
                <button class="edit-btn" data-log-id="{{this.log_id}}">Edit</button>
                <button class="delete-btn" data-log-id="{{this.log_id}}">Delete</button>
            </div>

        
            <form class="edit-form" data-log-id="{{this.log_id}}">
                <input type="number" name="amount" placeholder="Enter new amount" value="{{this.amount}}">
                <button type="submit">Update</button>
            </form>
        </li>
        {{/each}}
    </ul>

    <a href="/profile">Back to Profile</a>

    <script>
       
        document.querySelectorAll('.delete-btn').forEach(button => {
            button.addEventListener('click', async function() {
                const logId = this.getAttribute('data-log-id');
                try {
                    const response = await fetch(`/user/intake/${logId}`, {
                        method: 'DELETE',
                    });
                    if (response.ok) {
                        location.reload(); 
                    } else {
                        alert('Failed to delete the record');
                    }
                } catch (error) {
                    console.error('Error deleting record:', error);
                    alert('Error deleting the record');
                }
            });
        });

  
        document.querySelectorAll('.edit-btn').forEach(button => {
            button.addEventListener('click', function() {
                const logId = this.getAttribute('data-log-id');
                const form = document.querySelector(`.edit-form[data-log-id="${logId}"]`);
                form.style.display = form.style.display === 'none' || form.style.display === '' ? 'block' : 'none';
            });
        });

  
        document.querySelectorAll('.edit-form').forEach(form => {
            form.addEventListener('submit', async function(event) {
                event.preventDefault();
                const logId = this.getAttribute('data-log-id');
                const amount = this.querySelector('input[name="amount"]').value;
                try {
                    const response = await fetch(`/user/intake/${logId}`, {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ amount: amount }),
                    });
                    if (response.ok) {
                        location.reload();
                    } else {
                        alert('Failed to update the record');
                    }
                } catch (error) {
                    console.error('Error updating record:', error);
                    alert('Error updating the record');
                }
            });
        });
    </script>
</body>

</html>
